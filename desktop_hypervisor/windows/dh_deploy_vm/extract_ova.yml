# Copyright 2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
- name: "Initialize the facts of Guest vmx path"
  ansible.builtin.set_fact:
    dh_guest_vm_extracted: false

- name: "Initialize the facts of Guest OVA/OVF URL"
  when: iso_http_server_path is defined and iso_http_server_path
  ansible.builtin.set_fact:
    dh_guest_image_path: "{{ iso_http_server_path }}{{ dh_guest_iso_path }}"

- name: "Check ovftool  exists or not"
  include_tasks: ../../common/check_ovftool_exists.yml

- name: "Extract OVF to VMX using ovftool"
  ansible.windows.win_command:
    cmd: '"{{ dh_host_ovftool_path }}" --overwrite --skipManifestCheck {{ dh_guest_image_path }} "{{ dh_vm_vmx_path }}"'
  delegate_to: "{{ host_machine_hostname }}"
  become: "{{ win_execute_cmd_become | default(false) }}"
  become_method: runas
  become_user: "{{ win_execute_cmd_become_user | default('Administrator') }}"
  register: extract_result
  failed_when: >
    ( extract_result.stdout is defined and 'Error' in extract_result.stdout )
    or
    ( extract_result.stderr is defined and 'Error' in extract_result.stderr )

- name: "Set the result of ovftool extract"
  when: extract_result.stderr is not defined or not extract_result.stderr
  ansible.builtin.set_fact:
    dh_guest_vm_extracted: true
    #dh_guest_vm_path: "{{ extract_ovf_result.stdout_lines | select ('match', 'Writing VMX file:.*.vmx', ignorecase=True) | regex_findall('/.*.vmx') | first }}"

