# Copyright 2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
- name: "Initialize the facts of Workstation installation package"
  ansible.builtin.set_fact:
    ws_install_file_path: ""
    ws_install_file_name: ""

- name: "Download Workstation installation package"
  ansible.builtin.get_url:
    url: "{{ workstation_download_url }}"
    dest: "{{ local_cache }}"
    mode: "0666"
    checksum: "{{ workstation_package_checksum | default(omit) }}"
    validate_certs: false
    use_proxy: "{{ use_localhost_proxy | default(false) }}"
  environment:
    HTTPS_PROXY: "{{ http_proxy_localhost | default(omit) }}"
    HTTP_PROXY: "{{ http_proxy_localhost | default(omit) }}"
    FTP_PROXY: "{{ http_proxy_localhost | default(omit) }}"
  register: download_ws_result
- name: "Display the download result"
  ansible.builtin.debug: var=download_ws_result

- name: "Set fact of the Workstation installation package name"
  when:
    - download_ws_result.status_code is defined
    - download_ws_result.status_code == 200
    - download_ws_result.dest is defined
    - download_ws_result.dest
  ansible.builtin.set_fact:
    ws_install_file_path: "{{ download_ws_result.dest }}"
    ws_install_file_name: "{{ download_ws_result.dest | basename }}"

- name: "Display the file name of downloaded Workstation installation package"
  ansible.builtin.debug:
    msg:
      - "Downloaded Workstation installation package: {{ ws_install_file_name }}"
      - "Workstation installation package is downloaded to: {{ ws_install_file_path }}"

- name: "Check downloaded Workstation installation package for Linux host"
  when: host_machine_type == "linux"
  ansible.builtin.assert:
    that:
      - ws_install_file_name
      - ws_install_file_name.split('.')[-1] | lower == "bundle"
    fail_msg: "Downloaded Workstation installation file type is: '{{ ws_install_file_name.split('.')[-1] }}', not for Linux host."

- name: "Check downloaded Workstation installation package for Windows host"
  when: host_machine_type == "windows"
  ansible.builtin.assert:
    that:
      - ws_install_file_name
      - ws_install_file_name.split('.')[-1] | lower == "exe"
    fail_msg: "Downloaded Workstation installation file type is: '{{ ws_install_file_name.split('.')[-1] }}', not for Windows host."
